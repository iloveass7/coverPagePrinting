const nodemailer = require("nodemailer");

const createTransporter = () => {
  return nodemailer.createTransport({
    host: process.env.SMTP_HOST || "smtp.gmail.com",
    port: process.env.SMTP_PORT || 587,
    secure: false, // true for 465, false for other ports
    auth: {
      user: process.env.SMTP_USER, // Your email
      pass: process.env.SMTP_PASS, // Your email password or app password
    },
  });
};

const sendEmail = async (coverData, pdfBuffer, token) => {
  try {
    const transporter = createTransporter();

    // Email content
    const mailOptions = {
      from: `"Assignment Cover Generator" <${process.env.SMTP_USER}>`,
      to: process.env.PRINT_SHOP_EMAIL, // Print shop owner's email
      subject: `ðŸ”– PRINT REQUEST - TOKEN: ${token}`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #333; border-bottom: 2px solid #4CAF50; padding-bottom: 10px;">
            New Print Request
          </h2>
          
          <div style="background-color: #f5f5f5; padding: 15px; border-radius: 5px; margin: 20px 0;">
            <h3 style="color: #4CAF50; margin-top: 0;">ðŸ”‘ Search Token: <span style="background-color: #ffeb3b; padding: 5px 10px; border-radius: 3px;">${token}</span></h3>
            <p style="color: #666; font-size: 14px;">Search your inbox with this token to find this print request quickly.</p>
          </div>

          <h3 style="color: #333;">Student Details:</h3>
          <table style="width: 100%; border-collapse: collapse;">
            <tr style="background-color: #f9f9f9;">
              <td style="padding: 10px; border: 1px solid #ddd;"><strong>Name:</strong></td>
              <td style="padding: 10px; border: 1px solid #ddd;">${
                coverData.name
              }</td>
            </tr>
            <tr>
              <td style="padding: 10px; border: 1px solid #ddd;"><strong>Student ID:</strong></td>
              <td style="padding: 10px; border: 1px solid #ddd;">${
                coverData.studentId
              }</td>
            </tr>
            <tr style="background-color: #f9f9f9;">
              <td style="padding: 10px; border: 1px solid #ddd;"><strong>Department:</strong></td>
              <td style="padding: 10px; border: 1px solid #ddd;">${
                coverData.department
              }</td>
            </tr>
            <tr>
              <td style="padding: 10px; border: 1px solid #ddd;"><strong>Lab Group:</strong></td>
              <td style="padding: 10px; border: 1px solid #ddd;">${
                coverData.labGroup
              }</td>
            </tr>
          </table>

          <h3 style="color: #333; margin-top: 20px;">Assignment Details:</h3>
          <table style="width: 100%; border-collapse: collapse;">
            <tr style="background-color: #f9f9f9;">
              <td style="padding: 10px; border: 1px solid #ddd;"><strong>Assignment No:</strong></td>
              <td style="padding: 10px; border: 1px solid #ddd;">${
                coverData.assignmentNo
              }</td>
            </tr>
            <tr>
              <td style="padding: 10px; border: 1px solid #ddd;"><strong>Assignment Name:</strong></td>
              <td style="padding: 10px; border: 1px solid #ddd;">${
                coverData.assignmentName
              }</td>
            </tr>
            <tr style="background-color: #f9f9f9;">
              <td style="padding: 10px; border: 1px solid #ddd;"><strong>Submission Date:</strong></td>
              <td style="padding: 10px; border: 1px solid #ddd;">${
                coverData.submissionDate
              }</td>
            </tr>
            <tr>
              <td style="padding: 10px; border: 1px solid #ddd;"><strong>Teacher:</strong></td>
              <td style="padding: 10px; border: 1px solid #ddd;">${
                coverData.teacher
              }</td>
            </tr>
          </table>

          <div style="margin-top: 30px; padding: 15px; background-color: #e3f2fd; border-left: 4px solid #2196F3; border-radius: 3px;">
            <p style="margin: 0; color: #1976D2;">
              <strong>ðŸ“Ž Assignment cover page is attached as PDF.</strong>
            </p>
          </div>

          <hr style="margin: 30px 0; border: none; border-top: 1px solid #ddd;">
          
          <p style="color: #999; font-size: 12px; text-align: center;">
            Generated by Assignment Cover Generator on ${new Date().toLocaleString(
              "en-US",
              {
                dateStyle: "long",
                timeStyle: "short",
              }
            )}
          </p>
        </div>
      `,
      attachments: [
        {
          filename: `assignment_cover_${coverData.studentId}_${token}.pdf`,
          content: pdfBuffer,
          contentType: "application/pdf",
        },
      ],
    };

    // Send email
    const info = await transporter.sendMail(mailOptions);

    console.log("Email sent successfully:", info.messageId);

    return {
      success: true,
      messageId: info.messageId,
    };
  } catch (error) {
    console.error("Email sending error:", error);
    return {
      success: false,
      error: error.message,
    };
  }
};

module.exports = { sendEmail };
